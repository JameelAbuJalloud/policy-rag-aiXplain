{
    "expiry": 1753308334.4006076,
    "data": {
        "67c5f705d8f6a65d6f74d732": {
            "id": "67c5f705d8f6a65d6f74d732",
            "name": "Jina CLIP v2 (Multimodal)",
            "description": "Jina CLIP v2 revolutionizes multimodal AI by bridging the gap between visual and textual understanding across 89 languages. This model solves critical challenges in global e-commerce, content management, and cross-cultural communication by enabling accurate image-text matching regardless of language barriers. For businesses expanding internationally or managing multilingual content, it eliminates the need for separate models per language or complex translation pipelines. The model particularly shines in scenarios requiring precise visual search across language boundaries, such as global marketplace product discovery or multilingual digital asset management.",
            "supplier": {
                "id": 26964,
                "name": "Jina Ai",
                "code": "jina-ai"
            },
            "additional_info": {
                "code": "",
                "attributes": [
                    {
                        "name": "embeddingSize",
                        "value": 1024
                    }
                ],
                "embedding_size": 1024
            },
            "input_params": {
                "text": {
                    "name": "Text",
                    "code": "text",
                    "required": true,
                    "isFixed": false,
                    "dataType": "text",
                    "dataSubType": "text",
                    "multipleValues": false,
                    "defaultValues": []
                },
                "language": {
                    "name": "Language",
                    "code": "language",
                    "required": true,
                    "isFixed": true,
                    "dataType": "label",
                    "dataSubType": "label",
                    "multipleValues": false,
                    "defaultValues": []
                },
                "dialect": {
                    "name": "Dialect",
                    "code": "dialect",
                    "required": false,
                    "isFixed": true,
                    "dataType": "label",
                    "dataSubType": "label",
                    "multipleValues": false,
                    "defaultValues": []
                },
                "script": {
                    "name": "Script",
                    "code": "script",
                    "required": false,
                    "isFixed": true,
                    "dataType": "label",
                    "dataSubType": "label",
                    "multipleValues": false,
                    "defaultValues": []
                }
            },
            "output_params": {
                "data": {
                    "name": "Embedding",
                    "code": "data",
                    "dataType": "label"
                }
            },
            "model_params": {
                "input": {
                    "required": true,
                    "value": null
                }
            },
            "function": "text-embedding",
            "status": "onboarded"
        },
        "6810d195a289e15e3e5dd145": {
            "id": "6810d195a289e15e3e5dd145",
            "name": "Qwen2.5 7B Instruct",
            "description": "The 7 billion parameter Qwen2.5 excels in language understanding, multilingual capabilities, coding, mathematics, and reasoning",
            "supplier": {
                "id": 20164,
                "name": "Deep Infra",
                "code": "deepinfra"
            },
            "version": "Qwen/Qwen2.5-7B-Instruct",
            "license": null,
            "privacy": {
                "_value_": "Private",
                "_name_": "PRIVATE",
                "__objclass__": "{'_generate_next_value_': <staticmethod(<function Enum._generate_next_value_ at 0x0000022B2475B100>)>, '__module__': 'aixplain.enums.privacy', '_new_member_': <built-in method __new__ of type object at 0x00007FFAD9233750>, '_use_args_': False, '_member_names_': ['PUBLIC', 'PRIVATE', 'RESTRICTED'], '_member_map_': {'PUBLIC': <Privacy.PUBLIC: 'Public'>, 'PRIVATE': <Privacy.PRIVATE: 'Private'>, 'RESTRICTED': <Privacy.RESTRICTED: 'Restricted'>}, '_value2member_map_': {'Public': <Privacy.PUBLIC: 'Public'>, 'Private': <Privacy.PRIVATE: 'Private'>, 'Restricted': <Privacy.RESTRICTED: 'Restricted'>}, '_unhashable_values_': [], '_member_type_': <class 'object'>, '_value_repr_': None, '__doc__': None, 'PUBLIC': <Privacy.PUBLIC: 'Public'>, 'PRIVATE': <Privacy.PRIVATE: 'Private'>, 'RESTRICTED': <Privacy.RESTRICTED: 'Restricted'>, '__new__': <function Enum.__new__ at 0x0000022B2475AFC0>}",
                "_sort_order_": 1
            },
            "cost": {
                "price": 1e-07,
                "unitType": "TOKEN",
                "unitTypeScale": null
            },
            "api_key": "904afc547d208b3ad5fe146079b0d1e08d4b077ed893139fb187b64ae98194f0",
            "additional_info": {
                "code": "",
                "parameters": {
                    "language": [
                        "en"
                    ],
                    "temperature": [
                        "0"
                    ],
                    "top_p": [
                        "0.7"
                    ],
                    "top_k": [
                        "50"
                    ],
                    "max_tokens": [
                        "2048"
                    ],
                    "frequency_penalty": [
                        "0"
                    ],
                    "presence_penalty": [
                        "0"
                    ],
                    "history": [
                        ""
                    ]
                },
                "inputs": [],
                "attributes": null
            },
            "url": "https://models.aixplain.com/api/v1/execute",
            "backend_url": "https://platform-api.aixplain.com",
            "function": "text-generation",
            "is_subscribed": false,
            "created_at": "2025-04-29 19:37:27.222000+00:00",
            "input_params": {
                "text": {
                    "name": "Text",
                    "code": "text",
                    "required": true,
                    "isFixed": false,
                    "dataType": "text",
                    "dataSubType": "text",
                    "multipleValues": false,
                    "defaultValues": []
                },
                "temperature": {
                    "name": "Temperature",
                    "code": "temperature",
                    "required": false,
                    "isFixed": false,
                    "dataType": "number",
                    "dataSubType": "number",
                    "multipleValues": false,
                    "defaultValues": []
                },
                "prompt": {
                    "name": "Prompt",
                    "code": "prompt",
                    "required": false,
                    "isFixed": false,
                    "dataType": "text",
                    "dataSubType": "text",
                    "multipleValues": false
                },
                "context": {
                    "name": "Context",
                    "code": "context",
                    "required": false,
                    "isFixed": false,
                    "dataType": "text",
                    "dataSubType": "text",
                    "multipleValues": false
                },
                "language": {
                    "name": "Language",
                    "code": "language",
                    "required": false,
                    "isFixed": true,
                    "dataType": "label",
                    "dataSubType": "label",
                    "multipleValues": false,
                    "defaultValues": []
                },
                "script": {
                    "name": "Script",
                    "code": "script",
                    "required": false,
                    "isFixed": true,
                    "dataType": "label",
                    "dataSubType": "label",
                    "multipleValues": false,
                    "defaultValues": []
                }
            },
            "output_params": {
                "data": {
                    "name": "Text",
                    "code": "data",
                    "defaultValue": [],
                    "dataType": "text"
                }
            },
            "model_params": {
                "text": {
                    "required": true,
                    "value": null
                },
                "template": {
                    "required": false,
                    "value": null
                },
                "prompt": {
                    "required": false,
                    "value": null
                },
                "context": {
                    "required": false,
                    "value": null
                },
                "language": {
                    "required": true,
                    "value": null
                },
                "script": {
                    "required": false,
                    "value": null
                },
                "temperature": {
                    "required": false,
                    "value": null
                },
                "top_p": {
                    "required": false,
                    "value": null
                },
                "top_k": {
                    "required": false,
                    "value": null
                },
                "max_tokens": {
                    "required": false,
                    "value": null
                },
                "frequency_penalty": {
                    "required": false,
                    "value": null
                },
                "presence_penalty": {
                    "required": false,
                    "value": null
                },
                "history": {
                    "required": false,
                    "value": null
                }
            },
            "supports_streaming": true,
            "function_type": {
                "_value_": "ai",
                "_name_": "AI",
                "__objclass__": "{'_generate_next_value_': <staticmethod(<function Enum._generate_next_value_ at 0x0000022B2475B100>)>, '__module__': 'aixplain.enums.function_type', '_new_member_': <built-in method __new__ of type object at 0x00007FFAD9233750>, '_use_args_': False, '_member_names_': ['AI', 'SEGMENTOR', 'RECONSTRUCTOR', 'UTILITY', 'METRIC', 'SEARCH', 'INTEGRATION', 'CONNECTION', 'MCP_CONNECTION', 'MCPSERVER'], '_member_map_': {'AI': <FunctionType.AI: 'ai'>, 'SEGMENTOR': <FunctionType.SEGMENTOR: 'segmentor'>, 'RECONSTRUCTOR': <FunctionType.RECONSTRUCTOR: 'reconstructor'>, 'UTILITY': <FunctionType.UTILITY: 'utility'>, 'METRIC': <FunctionType.METRIC: 'metric'>, 'SEARCH': <FunctionType.SEARCH: 'search'>, 'INTEGRATION': <FunctionType.INTEGRATION: 'connector'>, 'CONNECTION': <FunctionType.CONNECTION: 'connection'>, 'MCP_CONNECTION': <FunctionType.MCP_CONNECTION: 'mcpconnection'>, 'MCPSERVER': <FunctionType.MCPSERVER: 'mcpserver'>}, '_value2member_map_': {'ai': <FunctionType.AI: 'ai'>, 'segmentor': <FunctionType.SEGMENTOR: 'segmentor'>, 'reconstructor': <FunctionType.RECONSTRUCTOR: 'reconstructor'>, 'utility': <FunctionType.UTILITY: 'utility'>, 'metric': <FunctionType.METRIC: 'metric'>, 'search': <FunctionType.SEARCH: 'search'>, 'connector': <FunctionType.INTEGRATION: 'connector'>, 'connection': <FunctionType.CONNECTION: 'connection'>, 'mcpconnection': <FunctionType.MCP_CONNECTION: 'mcpconnection'>, 'mcpserver': <FunctionType.MCPSERVER: 'mcpserver'>}, '_unhashable_values_': [], '_member_type_': <class 'object'>, '_value_repr_': None, '__doc__': None, 'AI': <FunctionType.AI: 'ai'>, 'SEGMENTOR': <FunctionType.SEGMENTOR: 'segmentor'>, 'RECONSTRUCTOR': <FunctionType.RECONSTRUCTOR: 'reconstructor'>, 'UTILITY': <FunctionType.UTILITY: 'utility'>, 'METRIC': <FunctionType.METRIC: 'metric'>, 'SEARCH': <FunctionType.SEARCH: 'search'>, 'INTEGRATION': <FunctionType.INTEGRATION: 'connector'>, 'CONNECTION': <FunctionType.CONNECTION: 'connection'>, 'MCP_CONNECTION': <FunctionType.MCP_CONNECTION: 'mcpconnection'>, 'MCPSERVER': <FunctionType.MCPSERVER: 'mcpserver'>, '__new__': <function Enum.__new__ at 0x0000022B2475AFC0>}",
                "_sort_order_": 0
            },
            "status": "onboarded",
            "temperature": 0.0
        }
    }
}